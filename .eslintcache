[{"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/index.js":"1","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/PrivateRoute/PrivateRoute.js":"2","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/PrivateRoute/AuthRoutes.js":"3","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/layouts/Auth.js":"4","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/layouts/Admin.js":"5","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/routes.js":"6","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Footers/AdminFooter.js":"7","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Navbars/AdminNavbar.js":"8","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Footers/AuthFooter.js":"9","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Navbars/AuthNavbar.js":"10","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Sidebar/Sidebar.js":"11","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/UsersTable.js":"12","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ConfirmEmail.js":"13","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/EditProfile.js":"14","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ResetPasswordSuccess.js":"15","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ResetPassword.js":"16","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ConfirmPassword.js":"17","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UserList.js":"18","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Accoutants/AccountantList.js":"19","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/network/ApiAxios.js":"20","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Maps.js":"21","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Profile.js":"22","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/Index.js":"23","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Login.js":"24","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Register.js":"25","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Tables.js":"26","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Icons.js":"27","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/config.js":"28","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/Header.js":"29","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/UserHeader.js":"30","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/variables/charts.js":"31","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/HeadersList.js":"32","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/EditHeader.js":"33","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UsersCreate/stepforms/SecondPage.js":"34","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UsersCreate/stepforms/FirstPage.js":"35","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UsersCreate/UserCreate.js":"36"},{"size":783,"mtime":1632578699282,"results":"37","hashOfConfig":"38"},{"size":378,"mtime":1632578699278,"results":"39","hashOfConfig":"38"},{"size":378,"mtime":1632578699278,"results":"40","hashOfConfig":"38"},{"size":2501,"mtime":1632578699282,"results":"41","hashOfConfig":"38"},{"size":1921,"mtime":1632578699282,"results":"42","hashOfConfig":"38"},{"size":3500,"mtime":1632787539666,"results":"43","hashOfConfig":"38"},{"size":1873,"mtime":1632578699278,"results":"44","hashOfConfig":"38"},{"size":3908,"mtime":1632578699278,"results":"45","hashOfConfig":"38"},{"size":1607,"mtime":1632578699278,"results":"46","hashOfConfig":"38"},{"size":3299,"mtime":1632578699278,"results":"47","hashOfConfig":"38"},{"size":8704,"mtime":1632578699282,"results":"48","hashOfConfig":"38"},{"size":2054,"mtime":1632578699282,"results":"49","hashOfConfig":"38"},{"size":1404,"mtime":1632578699282,"results":"50","hashOfConfig":"38"},{"size":6263,"mtime":1632578699282,"results":"51","hashOfConfig":"38"},{"size":869,"mtime":1632578699282,"results":"52","hashOfConfig":"38"},{"size":4636,"mtime":1632578699282,"results":"53","hashOfConfig":"38"},{"size":4333,"mtime":1632578699282,"results":"54","hashOfConfig":"38"},{"size":16292,"mtime":1632665299399,"results":"55","hashOfConfig":"38"},{"size":12129,"mtime":1632665055370,"results":"56","hashOfConfig":"38"},{"size":1407,"mtime":1632578699282,"results":"57","hashOfConfig":"38"},{"size":3455,"mtime":1632578699282,"results":"58","hashOfConfig":"38"},{"size":19591,"mtime":1632578699282,"results":"59","hashOfConfig":"38"},{"size":11805,"mtime":1632578699282,"results":"60","hashOfConfig":"38"},{"size":5894,"mtime":1632578699282,"results":"61","hashOfConfig":"38"},{"size":9556,"mtime":1632578699282,"results":"62","hashOfConfig":"38"},{"size":70588,"mtime":1632578699282,"results":"63","hashOfConfig":"38"},{"size":121766,"mtime":1632578699282,"results":"64","hashOfConfig":"38"},{"size":218,"mtime":1632578699282,"results":"65","hashOfConfig":"38"},{"size":5845,"mtime":1632578699278,"results":"66","hashOfConfig":"38"},{"size":1461,"mtime":1632578699278,"results":"67","hashOfConfig":"38"},{"size":10116,"mtime":1632578699282,"results":"68","hashOfConfig":"38"},{"size":873,"mtime":1632578699278,"results":"69","hashOfConfig":"38"},{"size":1497,"mtime":1632578699278,"results":"70","hashOfConfig":"38"},{"size":1683,"mtime":1632787247466,"results":"71","hashOfConfig":"38"},{"size":1213,"mtime":1632787203146,"results":"72","hashOfConfig":"38"},{"size":858,"mtime":1632787812853,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"15yrunv",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"76"},"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/index.js",[],["163","164"],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/PrivateRoute/PrivateRoute.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/PrivateRoute/AuthRoutes.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/layouts/Auth.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/layouts/Admin.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/routes.js",["165"],"import Index from \"views/Index.js\";\nimport Profile from \"views/pages/Profile.js\";\nimport Maps from \"views/pages/Maps.js\";\nimport Register from \"views/pages/Register.js\";\nimport Login from \"views/pages/Login.js\";\nimport Tables from \"views/pages/Tables.js\";\nimport Icons from \"views/pages/Icons.js\";\nimport ConfirmEmail from \"./views/pages/ConfirmEmail\";\nimport EditProfile from \"./views/pages/EditProfile\";\nimport UsersTable from \"./views/pages/UsersTable\";\nimport ResetPassword from \"./views/pages/ResetPassword\";\nimport ConfirmPassword from \"./views/pages/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/pages/ResetPasswordSuccess\";\nimport userList from \"./views/pages/Users/UserList\";\nimport UserCreate from \"./views/pages/Users/UsersCreate/UserCreate\";\nimport AccountantList from \"./views/pages/Accoutants/AccountantList\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/icons\",\n    name: \"Icons\",\n    icon: \"ni ni-planet text-blue\",\n    component: Icons,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Usuários\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: userList,\n    layout: \"/admin\",\n    api: true,\n  },\n  {\n    path: \"/user-profile-created\",\n    name: \"Usuários\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: UserCreate,\n    layout: \"/admin\",\n    /* api: true, */\n  },\n  {\n    path: \"/accountant-profile\",\n    name: \"Contadores\",\n    icon: \"ni ni-briefcase-24 text-red\",\n    component: AccountantList,\n    layout: \"/admin\",\n    api: true,\n  },\n  {\n    path: \"/accountant-profile-created\",\n    name: \"Contadores\",\n    icon: \"ni ni-briefcase-24 text-red\",\n    component: AccountantList,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/tables\",\n    name: \"Tables\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tables,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true,\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true,\n  },\n  {\n    path: \"/confirm-email/:id\",\n    name: \"Confirm Email\",\n    icon: \"ni ni-check-bold text-green\",\n    component: ConfirmEmail,\n    layout: \"/auth\",\n    api: true,\n  },\n  {\n    path: \"/edit-profile\",\n    name: \"Edit Profile\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/reset-password\",\n    name: \"Reset Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPassword,\n    layout: \"/auth\",\n    api: true,\n  },\n  {\n    path: \"/confirm-password/:id\",\n    name: \"Confirm Password\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ConfirmPassword,\n    layout: \"/auth\",\n    api: true,\n  },\n  {\n    path: \"/reset-success\",\n    name: \"Password Reset Confirmed\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPasswordSuccess,\n    layout: \"/auth\",\n    api: false,\n  },\n];\nexport default routes;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Footers/AdminFooter.js",["166","167"],"import React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2021{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                RobotAcc\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink href=\"\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  RobotAcc\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://www.creative-tim.com/presentation?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Sobre nós\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"http://blog.creative-tim.com?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink href=\"\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  MIT License\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Navbars/AdminNavbar.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Footers/AuthFooter.js",["168"],"import React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2021{\" \"}\n                  <a className=\"font-weight-bold ml-1\" href=\"\" target=\"_blank\">\n                    RobotAcc\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink href=\"\" target=\"_blank\">\n                      RobotAcc\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"\" target=\"_blank\">\n                      Sobre nós\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"\" target=\"_blank\">\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"\" target=\"_blank\">\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Navbars/AuthNavbar.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Sidebar/Sidebar.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/UsersTable.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ConfirmEmail.js",["169"],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ConfirmEmail = props => {\n\n    const {id} = useParams();\n    const [valid, setValid] = useState(true);\n\n    useEffect(() => {\n        if (!id) {\n            setValid(false);\n        } else {\n            const runAsync = async () => {\n                const response = await confirmRegister(id);\n                const {data} = response;\n                console.log(data);\n                if (!data.success) {\n                    setValid(false);\n                } else {\n                    setTimeout(() => {\n                        props.history.push('/auth/login');\n                    }, 5000);\n                }\n            }\n            runAsync();\n        }\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>{valid ? \"Email confirmed! You will be redirected to login...\" : \"Something went wrong!\"}</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ConfirmEmail;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/EditProfile.js",["170"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useEffect, useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport {edit} from \"../../network/ApiAxios\";\n\nconst EditProfile = props => {\n\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n\n    const [name, setName] = useState(user.name);\n    const [email, setEmail] = useState(user.email);\n    const [isTestUser, setIsTestUser] = useState(false);\n\n    useEffect(() => {\n        if (JSON.parse(localStorage.getItem(\"user\")).email === \"test@test.com\") {\n            setIsTestUser(true);\n        }\n    }, []);\n\n    const editUser = async () => {\n        const response = await edit(user._id, name, email);\n        const { data } = response;\n        if (data.success) {\n            user = {...user, name, email}\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            props.history.push(\"/admin/user-profile\");\n        }\n    }\n\n    return (\n        <>\n            <EditHeader/>\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">My account</h3>\n                                        {isTestUser ? <h5>You are not allowed to edit the test user. Create another user to test this functionality</h5> : null}\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={editUser}\n                                            size=\"sm\"\n                                            disabled={isTestUser}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Username\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={name}\n                                                        id=\"input-username\"\n                                                        placeholder=\"Username\"\n                                                        onChange={e => setName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n);\n}\n\nexport default EditProfile;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ResetPasswordSuccess.js",["171","172","173","174"],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ResetPasswordSuccess = props => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.history.push(\"/auth/login\");\n        }, 5000);\n    }, [])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>Password reset confirmed! You will be redirected to login...</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ResetPasswordSuccess;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ResetPassword.js",["175","176","177"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { forgotPassword, login } from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nconst ResetPassword = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\n    \"E-mail enviado. Verifique sua caixa de entrada para redinificação de senha.\"\n  );\n  const [userID, setUserID] = useState(null);\n\n  const sendEmail = async () => {\n    const response = await forgotPassword(email);\n    const { data } = response;\n    if (data.success) {\n      console.log(data);\n      if (config.DEMO) {\n        setToastMessage(\n          \"Verifique seu e-mail\"\n        );\n        setUserID(data.forgotPassword.userID);\n      }\n      setShowToast(true);\n    } else {\n      setError(data.errors[0].msg);\n    }\n  };\n\n  return (\n    <>\n      <div\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        style={{\n          position: \"fixed\",\n          minHeight: \"100px\",\n          width: \"35%\",\n          right: 10,\n          bottom: 100,\n          zIndex: 50,\n        }}\n      >\n        <Toast\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"white\",\n            padding: 10,\n            borderRadius: 10,\n          }}\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={5000}\n          autohide={!config.DEMO}\n        >\n          <Toast.Header>\n            <img\n              style={{ height: \"30px\", width: \"100px\" }}\n              src={require(\"assets/img/brand/argon-react.png\").default}\n              alt=\"...\"\n            />\n          </Toast.Header>\n          <Toast.Body>\n            {toastMessage}\n            {config.DEMO ? (\n              <a\n                href={\n                  process.env.REACT_APP_DOMAIN_NAME +\n                  \"/auth/confirm-password/\" +\n                  userID\n                }\n              >\n                {process.env.REACT_APP_DOMAIN_NAME +\n                  \"/auth/confirm-password/\" +\n                  userID}\n              </a>\n            ) : null}\n          </Toast.Body>\n        </Toast>\n      </div>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {error ? (\n                <div className=\"text-muted font-italic\">\n                  <small>\n                    error:{\" \"}\n                    <span className=\"text-red font-weight-700\">{error}</span>\n                  </small>\n                </div>\n              ) : null}\n              <div className=\"text-center\">\n                <Button\n                  className=\"my-4\"\n                  color=\"primary\"\n                  type=\"button\"\n                  onClick={sendEmail}\n                >\n                  Redefinir Senha\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/ConfirmPassword.js",["178","179","180","181","182"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {useParams} from \"react-router-dom\";\n\nconst ConfirmPassword = props => {\n\n    const {id} = useParams();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const confirm = async () => {\n        if (password !== confirmPassword) {\n            setError(\"Passwords have to match\");\n            return;\n        }\n        const response = await confirmReset(id, password);\n        const {data} = response;\n        if (data.success) {\n            props.history.push(\"/auth/reset-success\");\n        } else {\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ConfirmPassword;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UserList.js",["183","184","185"],"import React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip,\n  Button,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n// core components\n\nconst UserList = () => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n              <Button\n                outline\n                color=\"white\"\n                sizy=\"lg\"\n                color=\"info\"\n                onClick={() => history.push(\"/admin/user-profile-created\")}\n              >\n                Cadastrar\n              </Button>\n            </div>\n          </div>\n        </Container>\n      </div>\n      {/* Page content */}\n      <Container className=\"mt--9\" fluid>\n        {/* Table */}\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col-12\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Listagem de Usuários</h3>\n              </CardHeader>\n              <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">Nome Usuário</th>\n                    <th scope=\"col\">CPF</th>\n                    <th scope=\"col\">Tipo Usuário</th>\n                    <th scope=\"col\">Setor</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Operação\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-warning\" />\n                        Contábil\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td className=\"text-right\">\n                      <UncontrolledDropdown>\n                        <DropdownToggle\n                          className=\"btn-icon-only text-light\"\n                          href=\"#pablo\"\n                          role=\"button\"\n                          size=\"sm\"\n                          color=\"\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-ellipsis-v\" />\n                        </DropdownToggle>\n                        <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Editar\n                          </DropdownItem>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Apagar\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Operação\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-warning\" />\n                        Contábil\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td className=\"text-right\">\n                      <UncontrolledDropdown>\n                        <DropdownToggle\n                          className=\"btn-icon-only text-light\"\n                          href=\"#pablo\"\n                          role=\"button\"\n                          size=\"sm\"\n                          color=\"\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-ellipsis-v\" />\n                        </DropdownToggle>\n                        <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Editar\n                          </DropdownItem>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Apagar\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Operação\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-warning\" />\n                        Contábil\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td className=\"text-right\">\n                      <UncontrolledDropdown>\n                        <DropdownToggle\n                          className=\"btn-icon-only text-light\"\n                          href=\"#pablo\"\n                          role=\"button\"\n                          size=\"sm\"\n                          color=\"\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-ellipsis-v\" />\n                        </DropdownToggle>\n                        <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Editar\n                          </DropdownItem>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Apagar\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Operação\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-warning\" />\n                        Contábil\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td className=\"text-right\">\n                      <UncontrolledDropdown>\n                        <DropdownToggle\n                          className=\"btn-icon-only text-light\"\n                          href=\"#pablo\"\n                          role=\"button\"\n                          size=\"sm\"\n                          color=\"\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-ellipsis-v\" />\n                        </DropdownToggle>\n                        <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Editar\n                          </DropdownItem>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Apagar\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Operação\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-warning\" />\n                        Contábil\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td className=\"text-right\">\n                      <UncontrolledDropdown>\n                        <DropdownToggle\n                          className=\"btn-icon-only text-light\"\n                          href=\"#pablo\"\n                          role=\"button\"\n                          size=\"sm\"\n                          color=\"\"\n                          onClick={(e) => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-ellipsis-v\" />\n                        </DropdownToggle>\n                        <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Editar\n                          </DropdownItem>\n                          <DropdownItem\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                          >\n                            Apagar\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n              <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                  <Pagination\n                    className=\"pagination justify-content-end mb-0\"\n                    listClassName=\"justify-content-end mb-0\"\n                  >\n                    <PaginationItem className=\"disabled\">\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                        tabIndex=\"-1\"\n                      >\n                        <i className=\"fas fa-angle-left\" />\n                        <span className=\"sr-only\">Previous</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem className=\"active\">\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        1\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        2 <span className=\"sr-only\">(current)</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        3\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        <i className=\"fas fa-angle-right\" />\n                        <span className=\"sr-only\">Next</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardFooter>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default UserList;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Accoutants/AccountantList.js",["186","187","188","189","190","191","192"],"import React from \"react\";\nimport * as Icon from \"react-bootstrap-icons\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip,\n  Button,\n} from \"reactstrap\";\n\nimport { useHistory } from \"react-router-dom\";\n\n// core components\n\nconst AccountantList = () => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n              <Button\n                outline\n                color=\"white\"\n                sizy=\"lg\"\n                color=\"info\"\n                onClick={() =>\n                  history.push(\"/admin/accountant-profile-created\")\n                }\n              >\n                Cadastrar\n              </Button>\n            </div>\n          </div>\n        </Container>\n      </div>\n      {/* Page content */}\n      <Container className=\"mt--9\" fluid>\n        {/* Table */}\n        {/* Dark table */}\n        <Row className=\"mt-5\">\n          <div className=\"col-12\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">Listagem de Contadores</h3>\n              </CardHeader>\n              <Table\n                className=\"align-items-center table-dark table-flush\"\n                responsive\n              >\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">Nome Contador</th>\n                    <th scope=\"col\">CPF</th>\n                    <th scope=\"col\">CRC</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\" />\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        012425/O-0\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td>\n                      <th>\n                        <Icon.CloudUpload color=\"white\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Pencil color=\"yellow\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Trash color=\"red\" size={20} />\n                      </th>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        012425/O-0\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td>\n                      <th>\n                        <Icon.CloudUpload color=\"white\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Pencil color=\"yellow\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Trash color=\"red\" size={20} />\n                      </th>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        012425/O-0\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td>\n                      <th>\n                        <Icon.CloudUpload color=\"white\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Pencil color=\"yellow\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Trash color=\"red\" size={20} />\n                      </th>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        012425/O-0\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td>\n                      <th>\n                        <Icon.CloudUpload color=\"white\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Pencil color=\"yellow\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Trash color=\"red\" size={20} />\n                      </th>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        012425/O-0\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td>\n                      <th>\n                        <Icon.CloudUpload color=\"white\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Pencil color=\"yellow\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Trash color=\"red\" size={20} />\n                      </th>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      <Media className=\"align-items-center\">\n                        <Media>\n                          <span className=\"mb-0 text-sm\">\n                            Jefferson Bruno dos Reis Silva\n                          </span>\n                        </Media>\n                      </Media>\n                    </th>\n                    <td>050.567.254-55</td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        012425/O-0\n                      </Badge>\n                    </td>\n                    <td>\n                      <Badge color=\"\" className=\"badge-dot mr-4\">\n                        <i className=\"bg-success\" />\n                        Ativo\n                      </Badge>\n                    </td>\n                    <td>\n                      <th>\n                        <Icon.CloudUpload color=\"white\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Pencil color=\"yellow\" size={20} />\n                      </th>\n                      <th>\n                        <Icon.Trash color=\"red\" size={20} />\n                      </th>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n              <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                  <Pagination\n                    className=\"pagination justify-content-end mb-0\"\n                    listClassName=\"justify-content-end mb-0\"\n                  >\n                    <PaginationItem className=\"disabled\">\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                        tabIndex=\"-1\"\n                      >\n                        <i className=\"fas fa-angle-left\" />\n                        <span className=\"sr-only\">Previous</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem className=\"active\">\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        1\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        2 <span className=\"sr-only\">(current)</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        3\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                      >\n                        <i className=\"fas fa-angle-right\" />\n                        <span className=\"sr-only\">Next</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardFooter>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default AccountantList;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/network/ApiAxios.js",["193"],"import axios from \"axios\";\nimport config from \"../config\";\n\n// const https = require('https');\n//\n// const agent = new https.Agent({\n//     rejectUnauthorized: false,\n// });\n\nconst instance = axios.create({\n  //baseURL: config.WS_BASE_URL,\n  baseURL: process.env.REACT_APP_WS_BASE_URL,\n});\n\ninstance.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = token ? token : \"\";\n  config.headers.ContentType = \"application/json\";\n  return config;\n});\n\nexport const getAll = async () => await instance.post(\"users/all\");\n\nexport const register = async (name, email, password, phone, agency, role) =>\n  await instance.post(\"users/register\", {\n    name,\n    email,\n    password,\n    phone,\n    agency,\n    role,\n  });\n\nexport const confirmRegister = async (id) =>\n  await instance.post(`users/confirm/${id}`);\n\nexport const forgotPassword = async (email) =>\n  await instance.post(\"users/forgotpassword\", { email });\n\nexport const confirmReset = async (id, password) =>\n  await instance.post(`users/resetpass/${id}`, { password });\n\nexport const login = async (email, password) =>\n  await instance.post(\"users/login\", { email, password });\n\nexport const logout = async (token) =>\n  await instance.post(\"users/logout\", { token });\n\nexport const edit = async (userID, name, email) =>\n  await instance.post(\"/users/edit\", { userID, name, email });\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Maps.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Profile.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/Index.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Login.js",["194"],"import React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport { login } from \"../../network/ApiAxios\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const tryLogin = async () => {\n    const response = await login(email, password);\n    const { data } = response;\n    console.log(data);\n    if (data.success) {\n      setError(\"\");\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"user\", data.findEmail.id);\n      props.history.push(\"/\");\n    } else {\n      setPassword(\"\");\n      setError(data.msg);\n    }\n  };\n\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          {\" \"}\n          {/* <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-3\">\n              <small>Sign in with</small>\n            </div>\n            <div className=\"btn-wrapper text-center\">\n              <Button\n                className=\"btn-neutral btn-icon\"\n                color=\"default\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <span className=\"btn-inner--icon\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/icons/common/github.svg\").default}\n                  />\n                </span>\n                <span className=\"btn-inner--text\">Github</span>\n              </Button>\n              <Button\n                className=\"btn-neutral btn-icon\"\n                color=\"default\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <span className=\"btn-inner--icon\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/icons/common/google.svg\").default}\n                  />\n                </span>\n                <span className=\"btn-inner--text\">Google</span>\n              </Button>\n            </div>\n          </CardHeader> */}\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small>Efetue login com suas credenciais</small>\n            </div>\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"E-mail\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Senha\"\n                    type=\"password\"\n                    autoComplete=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {/*<div className=\"custom-control custom-control-alternative custom-checkbox\">*/}\n              {/*    <input*/}\n              {/*        className=\"custom-control-input\"*/}\n              {/*        id=\" customCheckLogin\"*/}\n              {/*        type=\"checkbox\"*/}\n              {/*    />*/}\n              {/*    <label*/}\n              {/*        className=\"custom-control-label\"*/}\n              {/*        htmlFor=\" customCheckLogin\"*/}\n              {/*    >*/}\n              {/*        <span className=\"text-muted\">Remember me</span>*/}\n              {/*    </label>*/}\n              {/*</div>*/}\n              {error ? (\n                <div className=\"text-muted font-italic\">\n                  <small>\n                    error:{\" \"}\n                    <span className=\"text-red font-weight-700\">{error}</span>\n                  </small>\n                </div>\n              ) : null}\n              <div className=\"text-center\">\n                <Button\n                  className=\"my-4\"\n                  color=\"primary\"\n                  type=\"button\"\n                  onClick={tryLogin}\n                >\n                  Login\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"5\" className=\"center\">\n            <Nav>\n              <NavItem>\n                <NavLink href=\"/auth/reset-password\">Esqueceu a senha?</NavLink>\n              </NavItem>\n            </Nav>\n            {/* <a\n              className=\"text-light\"\n              onClick={() => props.history.push(\"/auth/reset-password\")}\n            >\n              <small>Esqueceu a senha?</small>\n            </a> */}\n          </Col>\n          {/*           <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              onClick={() => props.history.push(\"/auth/register\")}\n            >\n              <small>Create new account</small>\n            </a>\n          </Col> */}\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Register.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Tables.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Icons.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/config.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/Header.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/UserHeader.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/variables/charts.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/HeadersList.js",["195","196","197","198","199","200"],"import React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n  Button,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst HeaderList = () => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n              <Button\n                outline\n                color=\"white\"\n                sizy=\"lg\"\n                color=\"info\"\n                onClick={() => history.push(\"/admin/user-profile-created\")}\n              >\n                Cadastrar\n              </Button>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default HeaderList;\n",["201","202"],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/components/Headers/EditHeader.js",[],["203","204"],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UsersCreate/stepforms/SecondPage.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UsersCreate/stepforms/FirstPage.js",[],"/var/www/projetos/RobotAcc/RobotAcc-front-end/src/views/pages/Users/UsersCreate/UserCreate.js",["205"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport { FirstPage } from \"./stepforms/FirstPage\";\nimport { SecondPage } from \"./stepforms/SecondPage\";\n\nconst defaultData = {\n  firstName: \"\",\n  lastName: \"\",\n  nickName: \"\",\n  address: \"\",\n  city: \"\",\n  state: \"\",\n  zip: \"\",\n  phone: \"\",\n  email: \"\",\n};\n\nconst steps = [{ id: \"FirstPage\" }, { id: \"SecondPage\" }];\n\nconst UserCreate = () => {\n  const [formData, setForm] = useForm(defaultData);\n  const { step, navigation } = useStep({\n    steps,\n    initialStep: 0,\n  });\n\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"FirstPage\":\n      return <FirstPage {...props} />;\n    case \"SecondPage\":\n      return <SecondPage {...props} />;\n  }\n\n  return (\n    <div>\n      <h1>Multi step form</h1>\n    </div>\n  );\n};\n\nexport default UserCreate;\n",{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":15},{"ruleId":"210","severity":1,"message":"214","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":14,"column":15,"nodeType":"217","endLine":19,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":16,"column":19,"nodeType":"217","endLine":16,"endColumn":80},{"ruleId":"218","severity":1,"message":"219","line":29,"column":8,"nodeType":"220","endLine":29,"endColumn":10,"suggestions":"221"},{"ruleId":"210","severity":1,"message":"222","line":34,"column":8,"nodeType":"212","messageId":"213","endLine":34,"endColumn":18},{"ruleId":"210","severity":1,"message":"223","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":35},{"ruleId":"210","severity":1,"message":"224","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":19},{"ruleId":"210","severity":1,"message":"225","line":3,"column":9,"nodeType":"212","messageId":"213","endLine":3,"endColumn":24},{"ruleId":"218","severity":1,"message":"226","line":12,"column":8,"nodeType":"220","endLine":12,"endColumn":10,"suggestions":"227"},{"ruleId":"210","severity":1,"message":"228","line":24,"column":3,"nodeType":"212","messageId":"213","endLine":24,"endColumn":13},{"ruleId":"210","severity":1,"message":"229","line":32,"column":3,"nodeType":"212","messageId":"213","endLine":32,"endColumn":6},{"ruleId":"210","severity":1,"message":"230","line":35,"column":26,"nodeType":"212","messageId":"213","endLine":35,"endColumn":31},{"ruleId":"210","severity":1,"message":"228","line":24,"column":5,"nodeType":"212","messageId":"213","endLine":24,"endColumn":15},{"ruleId":"210","severity":1,"message":"229","line":32,"column":5,"nodeType":"212","messageId":"213","endLine":32,"endColumn":8},{"ruleId":"210","severity":1,"message":"231","line":35,"column":23,"nodeType":"212","messageId":"213","endLine":35,"endColumn":37},{"ruleId":"210","severity":1,"message":"230","line":35,"column":39,"nodeType":"212","messageId":"213","endLine":35,"endColumn":44},{"ruleId":"210","severity":1,"message":"232","line":36,"column":8,"nodeType":"212","messageId":"213","endLine":36,"endColumn":13},{"ruleId":"210","severity":1,"message":"233","line":17,"column":3,"nodeType":"212","messageId":"213","endLine":17,"endColumn":11},{"ruleId":"210","severity":1,"message":"234","line":21,"column":3,"nodeType":"212","messageId":"213","endLine":21,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":39,"column":17,"nodeType":"237","endLine":39,"endColumn":29},{"ruleId":"210","severity":1,"message":"238","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":15},{"ruleId":"210","severity":1,"message":"239","line":11,"column":3,"nodeType":"212","messageId":"213","endLine":11,"endColumn":15},{"ruleId":"210","severity":1,"message":"240","line":12,"column":3,"nodeType":"212","messageId":"213","endLine":12,"endColumn":23},{"ruleId":"210","severity":1,"message":"241","line":13,"column":3,"nodeType":"212","messageId":"213","endLine":13,"endColumn":17},{"ruleId":"210","severity":1,"message":"233","line":18,"column":3,"nodeType":"212","messageId":"213","endLine":18,"endColumn":11},{"ruleId":"210","severity":1,"message":"234","line":22,"column":3,"nodeType":"212","messageId":"213","endLine":22,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":42,"column":17,"nodeType":"237","endLine":42,"endColumn":29},{"ruleId":"210","severity":1,"message":"242","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"228","line":7,"column":3,"nodeType":"212","messageId":"213","endLine":7,"endColumn":13},{"ruleId":"210","severity":1,"message":"243","line":5,"column":3,"nodeType":"212","messageId":"213","endLine":5,"endColumn":7},{"ruleId":"210","severity":1,"message":"244","line":6,"column":3,"nodeType":"212","messageId":"213","endLine":6,"endColumn":11},{"ruleId":"210","severity":1,"message":"245","line":7,"column":3,"nodeType":"212","messageId":"213","endLine":7,"endColumn":12},{"ruleId":"210","severity":1,"message":"229","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":6},{"ruleId":"210","severity":1,"message":"246","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":6},{"ruleId":"235","severity":1,"message":"236","line":27,"column":17,"nodeType":"237","endLine":27,"endColumn":29},{"ruleId":"206","replacedBy":"247"},{"ruleId":"208","replacedBy":"248"},{"ruleId":"206","replacedBy":"249"},{"ruleId":"208","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":29,"column":3,"nodeType":"253","messageId":"254","endLine":34,"endColumn":4},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["257"],"'UserHeader' is defined but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'confirmRegister' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["258"],"'CardHeader' is defined but never used.","'Row' is defined but never used.","'login' is defined but never used.","'forgotPassword' is defined but never used.","'Toast' is defined but never used.","'Progress' is defined but never used.","'UncontrolledTooltip' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'config' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Col' is defined but never used.",["255"],["256"],["255"],["256"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [id, props.history]",{"range":"263","text":"264"},"Update the dependencies array to be: [props.history]",{"range":"265","text":"266"},[877,879],"[id, props.history]",[363,365],"[props.history]"]